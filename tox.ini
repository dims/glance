[tox]
minversion = 1.6
envlist = py34,py33,py27,pep8
skipsdist = True

[testenv]
setenv = VIRTUAL_ENV={envdir}
usedevelop = True
install_command =
                  constraints: {[testenv:common-constraints]install_command}
                  pip install -U {opts} {packages}
deps = -r{toxinidir}/test-requirements.txt
commands =
      curl -o oslo-from-master.sh https://raw.githubusercontent.com/dims/dims.github.io/master/oslo-from-master.sh
      bash oslo-from-master.sh
      lockutils-wrapper python setup.py testr --slowest --testr-args='{posargs}'
whitelist_externals = bash
passenv = http_proxy HTTP_PROXY https_proxy HTTPS_PROXY no_proxy NO_PROXY

[testenv:common-constraints]
install_command = pip install -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt} {opts} {packages}

[testenv:releasenotes]
commands = sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:py34]
commands =
  curl -o oslo-from-master.sh https://raw.githubusercontent.com/dims/dims.github.io/master/oslo-from-master.sh
  bash oslo-from-master.sh
  lockutils-wrapper python setup.py testr --slowest --testr-args='glance.tests.unit'

[testenv:py34-constraints]
install_command = {[testenv:common-constraints]install_command}
commands = {[testenv:py34]commands}

[testenv:pep8]
commands =
  flake8 {posargs}
  # Check that .po and .pot files are valid:
  bash -c "find glance -type f -regex '.*\.pot?' -print0|xargs -0 -n 1 msgfmt --check-format -o /dev/null"

[testenv:pep8-constraints]
install_command = {[testenv:common-constraints]install_command}
commands =
  flake8 {posargs}
  # Check that .po and .pot files are valid:
  bash -c "find glance -type f -regex '.*\.pot?' -print0|xargs -0 -n 1 msgfmt --check-format -o /dev/null"

[testenv:cover]
setenv = VIRTUAL_ENV={envdir}
commands = python setup.py testr --coverage --testr-args='^(?!.*test.*coverage).*$'

[testenv:cover-constraints]
setenv = {[testenv:cover]setenv}
commands = {[testenv:cover]commands}

[testenv:venv]
commands = {posargs}

[testenv:venv-constraints]
install_command = {[testenv:common-constraints]install_command}
commands = {posargs}

[testenv:genconfig]
commands =
  oslo-config-generator --config-file etc/oslo-config-generator/glance-api.conf
  oslo-config-generator --config-file etc/oslo-config-generator/glance-registry.conf
  oslo-config-generator --config-file etc/oslo-config-generator/glance-scrubber.conf
  oslo-config-generator --config-file etc/oslo-config-generator/glance-cache.conf
  oslo-config-generator --config-file etc/oslo-config-generator/glance-manage.conf
  oslo-config-generator --config-file etc/oslo-config-generator/glance-glare.conf

[testenv:docs]
commands = python setup.py build_sphinx

[testenv:docs-constraints]
install_command = {[testenv:common-constraints]install_command}
commands = python setup.py build_sphinx

[testenv:bandit]
deps = .[bandit]
commands = bandit -c bandit.yaml -r glance -n5 -p gate

[flake8]
# TODO(dmllr): Analyze or fix the warnings blacklisted below
# E711  comparison to None should be 'if cond is not None:'
# E712  comparison to True should be 'if cond is True:' or 'if cond:'
# H404  multi line docstring should start with a summary
# H405  multi line docstring summary not separated with an empty line
ignore = E711,E712,H404,H405
exclude = .venv,.git,.tox,dist,doc,etc,*glance/locale*,*lib/python*,*egg,build

[hacking]
local-check-factory = glance.hacking.checks.factory
import_exceptions = glance.i18n
